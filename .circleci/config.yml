# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo

    steps:
      # checkout branch
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run:
          name: "Jest tests"
          command: yarn test -w2
      - run:
          name: "Report failing master"
          command: ~/repo/.circleci/notify_failure.sh
          when: on_fail

  deploy:
    docker:
      - image: docker:17.12.1-ce-git
    steps:
      - checkout:
          path: ~/repo
      - setup_remote_docker
      - run:
          command: |
            docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
            docker build  -t "${DOCKER_REGISTRY}/${NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}" -t "${DOCKER_REGISTRY}/${NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:latest" --build-arg CIRCLE_SHA1="${CIRCLE_SHA1}" --build-arg SENTRY_DSN="${SENTRY_DSN}" --build-arg GA_UA="${GA_UA}" --build-arg CIRCLE_PROJECT_REPONAME="${CIRCLE_PROJECT_REPONAME}" --build-arg CIRCLE_BRANCH="${CIRCLE_BRANCH}" --build-arg CIRCLE_REPOSITORY_URL="${CIRCLE_REPOSITORY_URL}" --build-arg WEBHOOK_URL="${WEBHOOK_URL}" --build-arg GOOGLE_MAPS_KEY="${GOOGLE_MAPS_KEY}" --build-arg AIRTABLE_READ_KEY="${AIRTABLE_READ_KEY}" --build-arg AIRTABLE_WRITE_KEY="${AIRTABLE_WRITE_KEY}" --build-arg GITHUB_PUBLIC_ACCESS_TOKEN="${GITHUB_PUBLIC_ACCESS_TOKEN}" .
            docker push "${DOCKER_REGISTRY}/${NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}"
            docker push "${DOCKER_REGISTRY}/${NAMESPACE}/${CIRCLE_PROJECT_REPONAME}:latest"
          name: "Build and Deploy API Docker Image"
      - run:
          command: apt-get install curl && ~/repo/.circleci/notify_failure.sh
          name: "Report failing Master"
          when: on_fail

    working_directory: ~/repo
  update_ecs:
    docker:
      - image: "cdssnc/ecs-cli:latest"
    steps:
      - checkout:
          path: ~/repo
      - setup_remote_docker
      - run:
          command: |
            cd deploy
            ecs-cli compose --file docker-compose.yml --ecs-params ecs-params.yml --cluster staging-ecs-cluster --project-name staging-vac-poc  service up --launch-type FARGATE --timeout 15
          name: "Update ECS Task"
      - run:
          command: ~/repo/.circleci/notify_failure.sh
          name: "Report failing Master"
          when: on_fail

    working_directory: ~/repo

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
